below is mcts.play("a", 0, alternatives = 1, train = True)
single best route planning. MCTS data generated can be used for Reinforcement Lrearning.
iteration 0
search_space:
a : childlist: [['ab', 'ac'], ['ad', 'ae']], Nlist: [2, 1]

ad : childlist: [['add'], ['ada']], Nlist: [1, 0]

ae : childlist: [['aec'], ['aee']], Nlist: [1, 0]

add : childlist: [['acaa'], ['adaa']], Nlist: [0, 0]

aec : childlist: [['aecc']], Nlist: [0]

ab : childlist: [['aba'], ['abc']], Nlist: [1, 1]

ac : childlist: [['acb'], ['aca']], Nlist: [0, 2]

aba : childlist: [['abaa']], Nlist: [0]

aca : childlist: [['acaa']], Nlist: [0]

abc : childlist: [['abcc']], Nlist: [0]

routelist:
success state: -1, probability: 0.6666666666666666, states_to_solve: ['ab', 'ac'], route_dict: {'a': ['ab', 'ac']}

iteration 1
search_space:
ab : childlist: [['aba'], ['abc']], Nlist: [1, 4]

ac : childlist: [['acb'], ['aca']], Nlist: [3, 2]

aba : childlist: [['abaa']], Nlist: [0]

aca : childlist: [['acaa']], Nlist: [0]

abc : childlist: [['abcc']], Nlist: [3]

acb : childlist: [['acbb']], Nlist: [3]

routelist:
success state: -1, probability: 0.6839903786706788, states_to_solve: ['abc', 'acb'], route_dict: {'a': ['ab', 'ac'], 'ab': ['abc'], 'ac': ['acb']}

below is mcts.play("a", 1, alternatives = 3, train = False)
muliple/alternative routes planning
iteration 0
search_space:
a : childlist: [['ab', 'ac'], ['ad', 'ae']], Nlist: [2, 1]

ad : childlist: [['add'], ['ada']], Nlist: [1, 0]

add : childlist: [['acaa'], ['adaa']], Nlist: [0, 0]

ae : childlist: [['aec'], ['aee']], Nlist: [1, 0]

aec : childlist: [['aecc']], Nlist: [0]

ab : childlist: [['aba'], ['abc']], Nlist: [1, 1]

ac : childlist: [['acb'], ['aca']], Nlist: [0, 2]

aba : childlist: [['abaa']], Nlist: [0]

aca : childlist: [['acaa']], Nlist: [0]

abc : childlist: [['abcc']], Nlist: [0]

routelist:
success state: -1, probability: 0.6666666666666666, states_to_solve: ['ab', 'ac'], route_dict: {'a': ['ab', 'ac']}

success state: -1, probability: 0.3333333333333333, states_to_solve: ['ad', 'ae'], route_dict: {'a': ['ad', 'ae']}

iteration 1
search_space:
ad : childlist: [['add'], ['ada']], Nlist: [3, 1]

add : childlist: [['acaa'], ['adaa']], Nlist: [1, 1]

ae : childlist: [['aec'], ['aee']], Nlist: [1, 3]

aec : childlist: [['aecc']], Nlist: [0]

ab : childlist: [['aba'], ['abc']], Nlist: [1, 4]

ac : childlist: [['acb'], ['aca']], Nlist: [3, 2]

aba : childlist: [['abaa']], Nlist: [0]

aca : childlist: [['acaa']], Nlist: [0]

abc : childlist: [['abcc']], Nlist: [3]

acb : childlist: [['acbb']], Nlist: [3]

adaa : childlist: [], Nlist: []

aee : childlist: [], Nlist: []

ada : childlist: [['adaa'], ['adac']], Nlist: [0, 1]

adac : childlist: [], Nlist: []

acaa : childlist: [['acaac'], ['acaaa']], Nlist: [0, 0]

routelist:
success state: -1, probability: 0.6839903786706788, states_to_solve: ['abc', 'acb'], route_dict: {'a': ['ab', 'ac'], 'ab': ['abc'], 'ac': ['acb']}

success state: -1, probability: 0.5975206328742887, states_to_solve: ['abc', 'aca'], route_dict: {'a': ['ab', 'ac'], 'ab': ['abc'], 'ac': ['aca']}

success state: -1, probability: 0.5723571212766659, states_to_solve: ['aee', 'add'], route_dict: {'a': ['ad', 'ae'], 'ae': ['aee'], 'ad': ['add']}

iteration 2
search_space:
add : childlist: [['acaa'], ['adaa']], Nlist: [4, 1]

aca : childlist: [['acaa']], Nlist: [3]

abc : childlist: [['abcc']], Nlist: [9]

acb : childlist: [['acbb']], Nlist: [6]

adaa : childlist: [], Nlist: []

aee : childlist: [], Nlist: []

acaa : childlist: [['acaac'], ['acaaa']], Nlist: [5, 1]

acaaa : childlist: [], Nlist: []

routelist:
success state: -1, probability: 0.7341955431699707, states_to_solve: ['acaa'], route_dict: {'a': ['ab', 'ac'], 'ab': ['abc'], 'ac': ['aca'], 'abc': ['abcc'], 'aca': ['acaa']}

success state: -1, probability: 0, states_to_solve: [], route_dict: {'a': ['ad', 'ae'], 'ae': ['aee'], 'ad': ['add']}

